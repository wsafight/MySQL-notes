"use strict";(self.webpackChunkMYSQL_notes=self.webpackChunkMYSQL_notes||[]).push([[707],{1445:(n,a,e)=>{e.r(a),e.d(a,{data:()=>s});const s={key:"v-b415473e",path:"/performance/database-index.html",title:"索引优化",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"performance/database-index.md",git:{updatedTime:1627409616e3,contributors:[]}}},9700:(n,a,e)=>{e.r(a),e.d(a,{default:()=>r});const s=(0,e(6252).uE)('<h1 id="索引优化" tabindex="-1"><a class="header-anchor" href="#索引优化" aria-hidden="true">#</a> 索引优化</h1><p>1.维度高的列创建索引</p><p>数据列中不重复值出现的个数,这个数量越高,维度就越高 如数据表中存在8行数据a ,b ,c,d,a,b,c,d这个表的维度为4 要为维度高的列创建索引,如性别和年龄,那年龄的维度就高于性别 性别这样的列不适合创建索引,因为维度过低</p><p>2.对 where,on,group by,order by 中出现的列使用索引</p><p>3.对较小的数据列使用索引,这样会使索引文件更小,同时内存中也可以装载更多的索引键</p><p>4.为较长的字符串使用前缀索引</p><p>5.不要过多创建索引,除了增加额外的磁盘空间外,对于DML操作的速度影响很大,因为其每增删改一次就得从新建立索引</p><p>6.使用组合索引,可以减少文件索引大小,在使用时速度要优于多个单列索引</p><div class="language-sqL ext-sqL line-numbers-mode"><pre class="language-sqL"><code>SELECT `sname` FROM `stu` WHERE `age`+10=30;-- 不会使用索引,因为所有索引列参与了计算\n\nSELECT `sname` FROM `stu` WHERE LEFT(`date`,4) &lt;1990; -- 不会使用索引,因为使用了函数运算,原理与上面相同\n\nSELECT * FROM `houdunwang` WHERE `uname` LIKE&#39;后盾%&#39; -- 走索引\n\nSELECT * FROM `houdunwang` WHERE `uname` LIKE &quot;%后盾%&quot; -- 不走索引\n\n-- 正则表达式不使用索引,这应该很好理解,所以为什么在SQL中很难看到regexp关键字的原因\n\n-- 字符串与数字比较不使用索引;\nCREATE TABLE `a` (`a` char(10));\nEXPLAIN SELECT * FROM `a` WHERE `a`=&quot;1&quot; -- 走索引\nEXPLAIN SELECT * FROM `a` WHERE `a`=1 -- 不走索引\n\nselect * from dept where dname=&#39;xxx&#39; or loc=&#39;xx&#39; or deptno=45 --如果条件中有or,即使其中有条件带索引也不会使用。换言之,就是要求使用的所有字段,都必须建立索引, 我们建议大家尽量避免使用or 关键字\n\n-- 如果mysql估计使用全表扫描要比使用索引快,则不使用索引\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>前缀索引兼顾索引大小和查询速度</p><p>组合索引</p><p>vc_Name,vc_City,i_Age vc_Name,vc_City vc_Name</p><p>只是在大数据导入时,可以先删除索引,再批量插入数据,最后再添加索引;</p>',13),r={render:function(n,a){return s}}}}]);